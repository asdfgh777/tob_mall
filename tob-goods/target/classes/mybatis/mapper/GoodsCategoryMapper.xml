<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.GoodsCategoryDao">

	<select id="get" resultType="com.entities.GoodsCategoryDO">
		select `cid`,`c_name`,`has_leaf`,`lev`,`create_time`,`update_time`,`parent_cid`,`status` from goods_category where cid = #{value}
	</select>

	<select id="list" resultType="com.entities.GoodsCategoryDO">
		select `cid`,`c_name`,`has_leaf`,`lev`,`create_time`,`update_time`,`parent_cid`,`status` from goods_category
        <where>  
		  		  <if test="cid != null and cid != ''"> and cid = #{cid} </if>
		  		  <if test="cName != null and cName != ''"> and c_name = #{cName} </if>
		  		  <if test="hasLeaf != null and hasLeaf != ''"> and has_leaf = #{hasLeaf} </if>
		  		  <if test="lev != null and lev != ''"> and lev = #{lev} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="parentCid != null and parentCid != ''"> and parent_cid = #{parentCid} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by cid desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from goods_category
		 <where>  
		  		  <if test="cid != null and cid != ''"> and cid = #{cid} </if>
		  		  <if test="cName != null and cName != ''"> and c_name = #{cName} </if>
		  		  <if test="hasLeaf != null and hasLeaf != ''"> and has_leaf = #{hasLeaf} </if>
		  		  <if test="lev != null and lev != ''"> and lev = #{lev} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="parentCid != null and parentCid != ''"> and parent_cid = #{parentCid} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.entities.GoodsCategoryDO" useGeneratedKeys="true" keyProperty="cid">
		insert into goods_category
		(
			`c_name`, 
			`has_leaf`, 
			`lev`, 
			`create_time`, 
			`update_time`, 
			`parent_cid`, 
			`status`
		)
		values
		(
			#{cName}, 
			#{hasLeaf}, 
			#{lev}, 
			#{createTime}, 
			#{updateTime}, 
			#{parentCid}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="com.entities.GoodsCategoryDO">
		update goods_category 
		<set>
			<if test="cName != null">`c_name` = #{cName}, </if>
			<if test="hasLeaf != null">`has_leaf` = #{hasLeaf}, </if>
			<if test="lev != null">`lev` = #{lev}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="parentCid != null">`parent_cid` = #{parentCid}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where cid = #{cid}
	</update>
	
	<delete id="remove">
		delete from goods_category where cid = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from goods_category where cid in 
		<foreach item="cid" collection="array" open="(" separator="," close=")">
			#{cid}
		</foreach>
	</delete>

</mapper>